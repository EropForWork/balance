import React, { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { LogIn, Eye, EyeOff, Wallet } from "lucide-react";
import { useAuthStore } from "../stores/authStore";
import { showErrorNotification } from "../stores/uiStore";
import { GoogleSignInButton } from "../components/auth/GoogleSignInButton";
import GoogleAuthService from "../services/GoogleAuthService";

export const LoginPage: React.FC = () => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const { login, isLoading, error, clearError, initializeGoogleAuth } =
    useAuthStore();
  const navigate = useNavigate();
  const location = useLocation();

  // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const from =
    (location.state as { from?: { pathname: string } })?.from?.pathname || "/";

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Auth
    initializeGoogleAuth();
  }, [initializeGoogleAuth]);

  useEffect(() => {
    if (error) {
      showErrorNotification("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", error);
      clearError();
    }
  }, [error, clearError]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!username.trim() || !password.trim()) {
      showErrorNotification("–û—à–∏–±–∫–∞", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    try {
      await login({ username, password });
      navigate(from, { replace: true });
    } catch {
      // –û—à–∏–±–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ store
    }
  };

  const handleGoogleSuccess = () => {
    navigate(from, { replace: true });
  };

  const handleGoogleError = (error: string) => {
    showErrorNotification("–û—à–∏–±–∫–∞ Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", error);
  };

  return (
    <div className="min-h-screen bg-primary flex items-center justify-center px-6 py-12">
      <div className="max-w-md w-full space-y-8">
        {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center">
          <div
            className="mx-auto h-24 w-24 rounded-2xl flex items-center justify-center mb-8 shadow-xl animate-bounce"
            style={{
              background:
                "linear-gradient(135deg, var(--primary-600) 0%, var(--primary-700) 100%)",
            }}
          >
            <Wallet className="h-12 w-12 text-white" />
          </div>
          <h2 className="text-4xl font-bold text-primary gradient-text mb-4">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Balance
          </h2>
          <p className="text-lg text-tertiary">
            –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏
          </p>
        </div>

        {/* Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è */}
        {GoogleAuthService.isConfigured() && (
          <div className="mt-8">
            <GoogleSignInButton
              onSuccess={handleGoogleSuccess}
              onError={handleGoogleError}
              theme="filled_blue"
              size="large"
              text="signin_with"
              width="100%"
              disabled={isLoading}
            />
          </div>
        )}

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div
          className={`${GoogleAuthService.isConfigured() ? "mt-8" : "mt-6"} relative`}
        >
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t border-primary"></div>
          </div>
          <div className="relative flex justify-center text-sm">
            <span className="px-4 bg-primary text-tertiary font-medium">
              {GoogleAuthService.isConfigured()
                ? "–∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ —Å –ø–æ–º–æ—â—å—é –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç–∞"
                : "–í–æ–π–¥–∏—Ç–µ —Å –ø–æ–º–æ—â—å—é –¥–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç–∞"}
            </span>
          </div>
        </div>

        {/* –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
        <div className="card bg-surface border border-secondary p-8 animate-slide-in-scale">
          <form className="space-y-6" onSubmit={handleSubmit}>
            <div className="space-y-5">
              {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
              <div className="form-group">
                <label htmlFor="username" className="form-label">
                  –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                </label>
                <input
                  id="username"
                  name="username"
                  type="text"
                  required
                  className="input"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  disabled={isLoading}
                />
              </div>

              {/* –ü–æ–ª–µ –ø–∞—Ä–æ–ª—è */}
              <div className="form-group">
                <label htmlFor="password" className="form-label">
                  –ü–∞—Ä–æ–ª—å
                </label>
                <div className="relative">
                  <input
                    id="password"
                    name="password"
                    type={showPassword ? "text" : "password"}
                    required
                    className="input pr-12"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    disabled={isLoading}
                  />
                  <button
                    type="button"
                    className="absolute inset-y-0 right-0 pr-4 flex items-center btn btn-ghost btn-icon"
                    onClick={() => setShowPassword(!showPassword)}
                    disabled={isLoading}
                  >
                    {showPassword ? (
                      <EyeOff className="h-5 w-5 text-tertiary hover:text-secondary" />
                    ) : (
                      <Eye className="h-5 w-5 text-tertiary hover:text-secondary" />
                    )}
                  </button>
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ */}
            <button
              type="submit"
              disabled={isLoading}
              className="btn btn-primary btn-lg w-full disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl"
            >
              {isLoading ? (
                <>
                  <div className="animate-spin rounded-full h-5 w-5 border-2 border-white/20 border-t-white mr-3"></div>
                  –í—Ö–æ–¥...
                </>
              ) : (
                <>
                  <LogIn className="h-5 w-5 mr-3" />
                  –í–æ–π—Ç–∏
                </>
              )}
            </button>
          </form>
        </div>

        {/* –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ */}
        <div className="card bg-surface-secondary border border-secondary p-6">
          <h3 className="text-base font-semibold text-primary mb-3 flex items-center">
            <div className="w-2 h-2 bg-success rounded-full mr-2 animate-pulse"></div>
            –î–µ–º–æ-–¥–æ—Å—Ç—É–ø:
          </h3>
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div className="bg-surface-tertiary rounded-lg p-3">
              <span className="font-medium text-secondary">–õ–æ–≥–∏–Ω:</span>
              <p className="text-primary font-mono mt-1">user</p>
            </div>
            <div className="bg-surface-tertiary rounded-lg p-3">
              <span className="font-medium text-secondary">–ü–∞—Ä–æ–ª—å:</span>
              <p className="text-primary font-mono mt-1">pass</p>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="text-center space-y-2">
          <p className="text-secondary text-sm">
            –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏.
          </p>
          <p className="text-tertiary text-xs">
            –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å
            GitHub Gist.
          </p>
          {!GoogleAuthService.isConfigured() && (
            <div className="bg-warning/10 border border-warning/20 rounded-lg p-3 mt-4">
              <p className="text-warning text-xs">
                üîç –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
                Google OAuth Client ID.
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};
